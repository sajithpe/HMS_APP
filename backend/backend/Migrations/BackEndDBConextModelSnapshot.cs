// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Models;

namespace backend.Migrations
{
    [DbContext(typeof(BackEndDBConext))]
    partial class BackEndDBConextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("backend.Models.Attendance", b =>
                {
                    b.Property<int>("AttId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AttDatetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("AttDeviceId")
                        .HasColumnType("int");

                    b.Property<string>("AttStat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttUpdateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.HasKey("AttId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("HotelId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("backend.Models.CustInquiry", b =>
                {
                    b.Property<int>("InqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerCustId")
                        .HasColumnType("int");

                    b.Property<string>("EnteredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnteredOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("InqDescrip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InqRoomType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InqStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InqId");

                    b.HasIndex("CustomerCustId");

                    b.HasIndex("HotelId");

                    b.ToTable("CustInquiries");
                });

            modelBuilder.Entity("backend.Models.Customer", b =>
                {
                    b.Property<int>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustContact")
                        .HasColumnType("int");

                    b.Property<string>("CustDeleteStat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustName1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustName2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("backend.Models.Department", b =>
                {
                    b.Property<int>("DepttId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeptName")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DeptStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.HasKey("DepttId");

                    b.HasIndex("HotelId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("backend.Models.EmpCat", b =>
                {
                    b.Property<int>("EmpCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmpCatName")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("EmpCatId");

                    b.ToTable("EmpCats");
                });

            modelBuilder.Entity("backend.Models.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentDepttId")
                        .HasColumnType("int");

                    b.Property<int>("DepttId")
                        .HasColumnType("int");

                    b.Property<string>("EmpAddress1")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpAddress2")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpAddress3")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EmpCatId")
                        .HasColumnType("int");

                    b.Property<int>("EmpContact")
                        .HasColumnType("int");

                    b.Property<DateTime>("EmpDOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpNIC")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EmpName1")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpName2")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmptStatus")
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.HasKey("EmpId");

                    b.HasIndex("DepartmentDepttId");

                    b.HasIndex("EmpCatId");

                    b.HasIndex("HotelId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("backend.Models.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExpenseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpenseId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("backend.Models.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeleteStatus")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("HotelName")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HotelType")
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("HotelId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("backend.Models.LiqStoreExpense", b =>
                {
                    b.Property<int>("LiqExId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnteredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnteredOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("LiqExDes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiqExStat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LiqExValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LiqExId");

                    b.HasIndex("HotelId");

                    b.ToTable("LiqStoreExpenses");
                });

            modelBuilder.Entity("backend.Models.LiqStoreIncome", b =>
                {
                    b.Property<int>("IncomeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnteredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnteredOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("LiqBotCount")
                        .HasColumnType("int");

                    b.Property<int>("LiqId")
                        .HasColumnType("int");

                    b.Property<int>("LiqShotCount")
                        .HasColumnType("int");

                    b.Property<decimal>("LiqValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("LiquorLiqId")
                        .HasColumnType("int");

                    b.HasKey("IncomeId");

                    b.HasIndex("HotelId");

                    b.HasIndex("LiquorLiqId");

                    b.ToTable("LiqStoreIncomes");
                });

            modelBuilder.Entity("backend.Models.Liquor", b =>
                {
                    b.Property<int>("LiqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("LiqBotPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LiqBotSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiqName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LiqShotPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LiqId");

                    b.ToTable("Liquors");
                });

            modelBuilder.Entity("backend.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerCustId")
                        .HasColumnType("int");

                    b.Property<string>("EnteredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HoteId")
                        .HasColumnType("int");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentStat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("CustomerCustId");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("backend.Models.Reservation", b =>
                {
                    b.Property<int>("ResId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerCustId")
                        .HasColumnType("int");

                    b.Property<string>("EnteredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnteredOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("ResAdults")
                        .HasColumnType("int");

                    b.Property<DateTime>("ResCheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ResCheckOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResDiscount")
                        .HasColumnType("int");

                    b.Property<int>("ResKids")
                        .HasColumnType("int");

                    b.Property<decimal>("ResNetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ResPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ResStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("ResId");

                    b.HasIndex("CustomerCustId");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("backend.Models.ReservationVAS", b =>
                {
                    b.Property<int>("ResVASId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnteredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ResDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResId")
                        .HasColumnType("int");

                    b.Property<string>("ResStat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReservationResId")
                        .HasColumnType("int");

                    b.Property<int>("VASId")
                        .HasColumnType("int");

                    b.HasKey("ResVASId");

                    b.HasIndex("ReservationResId");

                    b.HasIndex("VASId");

                    b.ToTable("ReservationVAs");
                });

            modelBuilder.Entity("backend.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleObject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("backend.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("RoomDescrip")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("RoomPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomType")
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("RoomId");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("backend.Models.Salary", b =>
                {
                    b.Property<int>("SalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeEmpId")
                        .HasColumnType("int");

                    b.Property<decimal>("SalBasic")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalEPF")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalETF")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalHPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalOtRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalTrAll")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SalId");

                    b.HasIndex("EmployeeEmpId");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeEmpId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserStat")
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("UserId");

                    b.HasIndex("EmployeeEmpId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("backend.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("backend.Models.VAS", b =>
                {
                    b.Property<int>("VasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VasName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VasValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("VasId");

                    b.ToTable("VASs");
                });

            modelBuilder.Entity("backend.Models.Attendance", b =>
                {
                    b.HasOne("backend.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("backend.Models.CustInquiry", b =>
                {
                    b.HasOne("backend.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerCustId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("backend.Models.Department", b =>
                {
                    b.HasOne("backend.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("backend.Models.Employee", b =>
                {
                    b.HasOne("backend.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentDepttId");

                    b.HasOne("backend.Models.EmpCat", "EmpCat")
                        .WithMany()
                        .HasForeignKey("EmpCatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("EmpCat");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("backend.Models.LiqStoreExpense", b =>
                {
                    b.HasOne("backend.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("backend.Models.LiqStoreIncome", b =>
                {
                    b.HasOne("backend.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Liquor", "Liquor")
                        .WithMany()
                        .HasForeignKey("LiquorLiqId");

                    b.Navigation("Hotel");

                    b.Navigation("Liquor");
                });

            modelBuilder.Entity("backend.Models.Payment", b =>
                {
                    b.HasOne("backend.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerCustId");

                    b.HasOne("backend.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId");

                    b.HasOne("backend.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Hotel");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("backend.Models.Reservation", b =>
                {
                    b.HasOne("backend.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerCustId");

                    b.HasOne("backend.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Hotel");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("backend.Models.ReservationVAS", b =>
                {
                    b.HasOne("backend.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationResId");

                    b.HasOne("backend.Models.VAS", "VAS")
                        .WithMany()
                        .HasForeignKey("VASId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");

                    b.Navigation("VAS");
                });

            modelBuilder.Entity("backend.Models.Room", b =>
                {
                    b.HasOne("backend.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("backend.Models.Salary", b =>
                {
                    b.HasOne("backend.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeEmpId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.HasOne("backend.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeEmpId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("backend.Models.UserRole", b =>
                {
                    b.HasOne("backend.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
